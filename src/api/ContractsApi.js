/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.5.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GetCharactersCharacterIdContracts200Ok', 'model/GetCharactersCharacterIdContractsContractIdBids200Ok', 'model/GetCharactersCharacterIdContractsContractIdBidsForbidden', 'model/GetCharactersCharacterIdContractsContractIdBidsInternalServerError', 'model/GetCharactersCharacterIdContractsContractIdItems200Ok', 'model/GetCharactersCharacterIdContractsContractIdItemsForbidden', 'model/GetCharactersCharacterIdContractsContractIdItemsInternalServerError', 'model/GetCharactersCharacterIdContractsForbidden', 'model/GetCharactersCharacterIdContractsInternalServerError'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/GetCharactersCharacterIdContracts200Ok'), require('../model/GetCharactersCharacterIdContractsContractIdBids200Ok'), require('../model/GetCharactersCharacterIdContractsContractIdBidsForbidden'), require('../model/GetCharactersCharacterIdContractsContractIdBidsInternalServerError'), require('../model/GetCharactersCharacterIdContractsContractIdItems200Ok'), require('../model/GetCharactersCharacterIdContractsContractIdItemsForbidden'), require('../model/GetCharactersCharacterIdContractsContractIdItemsInternalServerError'), require('../model/GetCharactersCharacterIdContractsForbidden'), require('../model/GetCharactersCharacterIdContractsInternalServerError'));
  } else {
    // Browser globals (root is window)
    if (!root.EveSwaggerInterface) {
      root.EveSwaggerInterface = {};
    }
    root.EveSwaggerInterface.ContractsApi = factory(root.EveSwaggerInterface.ApiClient, root.EveSwaggerInterface.GetCharactersCharacterIdContracts200Ok, root.EveSwaggerInterface.GetCharactersCharacterIdContractsContractIdBids200Ok, root.EveSwaggerInterface.GetCharactersCharacterIdContractsContractIdBidsForbidden, root.EveSwaggerInterface.GetCharactersCharacterIdContractsContractIdBidsInternalServerError, root.EveSwaggerInterface.GetCharactersCharacterIdContractsContractIdItems200Ok, root.EveSwaggerInterface.GetCharactersCharacterIdContractsContractIdItemsForbidden, root.EveSwaggerInterface.GetCharactersCharacterIdContractsContractIdItemsInternalServerError, root.EveSwaggerInterface.GetCharactersCharacterIdContractsForbidden, root.EveSwaggerInterface.GetCharactersCharacterIdContractsInternalServerError);
  }
}(this, function(ApiClient, GetCharactersCharacterIdContracts200Ok, GetCharactersCharacterIdContractsContractIdBids200Ok, GetCharactersCharacterIdContractsContractIdBidsForbidden, GetCharactersCharacterIdContractsContractIdBidsInternalServerError, GetCharactersCharacterIdContractsContractIdItems200Ok, GetCharactersCharacterIdContractsContractIdItemsForbidden, GetCharactersCharacterIdContractsContractIdItemsInternalServerError, GetCharactersCharacterIdContractsForbidden, GetCharactersCharacterIdContractsInternalServerError) {
  'use strict';

  /**
   * Contracts service.
   * @module api/ContractsApi
   * @version 0.5.0
   */

  /**
   * Constructs a new ContractsApi. 
   * @alias module:api/ContractsApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getCharactersCharacterIdContracts operation.
     * @callback module:api/ContractsApi~getCharactersCharacterIdContractsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCharactersCharacterIdContracts200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get contracts
     * Returns available contracts to character  ---  Alternate route: &#x60;/v1/characters/{character_id}/contracts/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/contracts/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/contracts/&#x60;   ---  This route is cached for up to 3600 seconds
     * @param {Number} characterId ID for a character
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.token Access token to use, if preferred over a header
     * @param {String} opts.userAgent Client identifier, takes precedence over headers
     * @param {String} opts.xUserAgent Client identifier, takes precedence over User-Agent
     * @param {module:api/ContractsApi~getCharactersCharacterIdContractsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCharactersCharacterIdContracts200Ok>}
     */
    this.getCharactersCharacterIdContracts = function(characterId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'characterId' is set
      if (characterId == undefined || characterId == null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdContracts");
      }


      var pathParams = {
        'character_id': characterId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token'],
        'user_agent': opts['userAgent']
      };
      var headerParams = {
        'X-User-Agent': opts['xUserAgent']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [GetCharactersCharacterIdContracts200Ok];

      return this.apiClient.callApi(
        '/characters/{character_id}/contracts/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCharactersCharacterIdContractsContractIdBids operation.
     * @callback module:api/ContractsApi~getCharactersCharacterIdContractsContractIdBidsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCharactersCharacterIdContractsContractIdBids200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get contract bids
     * Lists bids on a particular auction contract  ---  Alternate route: &#x60;/v1/characters/{character_id}/contracts/{contract_id}/bids/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/contracts/{contract_id}/bids/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/contracts/{contract_id}/bids/&#x60;   ---  This route is cached for up to 300 seconds
     * @param {Number} characterId ID for a character
     * @param {Number} contractId ID of a contract
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.token Access token to use, if preferred over a header
     * @param {String} opts.userAgent Client identifier, takes precedence over headers
     * @param {String} opts.xUserAgent Client identifier, takes precedence over User-Agent
     * @param {module:api/ContractsApi~getCharactersCharacterIdContractsContractIdBidsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCharactersCharacterIdContractsContractIdBids200Ok>}
     */
    this.getCharactersCharacterIdContractsContractIdBids = function(characterId, contractId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'characterId' is set
      if (characterId == undefined || characterId == null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdContractsContractIdBids");
      }

      // verify the required parameter 'contractId' is set
      if (contractId == undefined || contractId == null) {
        throw new Error("Missing the required parameter 'contractId' when calling getCharactersCharacterIdContractsContractIdBids");
      }


      var pathParams = {
        'character_id': characterId,
        'contract_id': contractId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token'],
        'user_agent': opts['userAgent']
      };
      var headerParams = {
        'X-User-Agent': opts['xUserAgent']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [GetCharactersCharacterIdContractsContractIdBids200Ok];

      return this.apiClient.callApi(
        '/characters/{character_id}/contracts/{contract_id}/bids/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCharactersCharacterIdContractsContractIdItems operation.
     * @callback module:api/ContractsApi~getCharactersCharacterIdContractsContractIdItemsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCharactersCharacterIdContractsContractIdItems200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get contract items
     * Lists Items and details of a particular contract  ---  Alternate route: &#x60;/v1/characters/{character_id}/contracts/{contract_id}/items/&#x60;  Alternate route: &#x60;/legacy/characters/{character_id}/contracts/{contract_id}/items/&#x60;  Alternate route: &#x60;/dev/characters/{character_id}/contracts/{contract_id}/items/&#x60;   ---  This route is cached for up to 3600 seconds
     * @param {Number} characterId ID for a character
     * @param {Number} contractId ID of a contract
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.token Access token to use, if preferred over a header
     * @param {String} opts.userAgent Client identifier, takes precedence over headers
     * @param {String} opts.xUserAgent Client identifier, takes precedence over User-Agent
     * @param {module:api/ContractsApi~getCharactersCharacterIdContractsContractIdItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCharactersCharacterIdContractsContractIdItems200Ok>}
     */
    this.getCharactersCharacterIdContractsContractIdItems = function(characterId, contractId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'characterId' is set
      if (characterId == undefined || characterId == null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdContractsContractIdItems");
      }

      // verify the required parameter 'contractId' is set
      if (contractId == undefined || contractId == null) {
        throw new Error("Missing the required parameter 'contractId' when calling getCharactersCharacterIdContractsContractIdItems");
      }


      var pathParams = {
        'character_id': characterId,
        'contract_id': contractId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token'],
        'user_agent': opts['userAgent']
      };
      var headerParams = {
        'X-User-Agent': opts['xUserAgent']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [GetCharactersCharacterIdContractsContractIdItems200Ok];

      return this.apiClient.callApi(
        '/characters/{character_id}/contracts/{contract_id}/items/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
